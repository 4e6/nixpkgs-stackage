# Generated by stackage2nix 0.7.2 from "./stack.yaml"
{ nixpkgs ? import <nixpkgs> {} }:

let
  stackPackages =
    { pkgs, stdenv, callPackage }:

    self: {
      "stackage2nix" = callPackage
        ({ mkDerivation, aeson, base, bytestring, Cabal, cabal2nix
         , containers, deepseq, distribution-nixpkgs, exceptions, filepath
         , gitlib, gitlib-libgit2, hopenssl, inflections, language-nix, lens
         , network-uri, optparse-applicative, pretty, QuickCheck
         , stackage-curator, text, unordered-containers, yaml
         }:
         mkDerivation {
           pname = "stackage2nix";
           version = "0.7.2";
           src = pkgs.fetchgit {
             url = "https://github.com/typeable/stackage2nix.git";
             rev = "80194259a7ce6f539b2858f83b75dd5d79e4eaa3";
             sha256 = "05qdwadfq264cm8xlzh320riv826rkh93r3msxvaij0hlbggck22";
           };
           isLibrary = true;
           isExecutable = true;
           libraryHaskellDepends = [
             aeson base bytestring Cabal cabal2nix containers deepseq
             distribution-nixpkgs exceptions filepath gitlib gitlib-libgit2
             hopenssl inflections language-nix lens network-uri
             optparse-applicative pretty QuickCheck stackage-curator text
             unordered-containers yaml
           ];
           executableHaskellDepends = [ base ];
           doHaddock = false;
           doCheck = false;
           homepage = "https://github.com/typeable/stackage2nix#readme";
           description = "Convert Stack files into Nix build instructions";
           license = stdenv.lib.licenses.bsd3;
         }) {};
      "stackage-curator" = callPackage
        ({ mkDerivation, aeson, amazonka, amazonka-core, amazonka-s3, async
         , base, blaze-html, bytestring, Cabal, classy-prelude-conduit
         , conduit, conduit-extra, containers, cryptonite
         , cryptonite-conduit, data-default-class, directory, exceptions
         , fetchgit, filepath, hashable, hpack, html-conduit, http-client
         , http-client-tls, http-conduit, lucid, memory, mime-types
         , mono-traversable, mtl, old-locale, optparse-applicative
         , optparse-simple, process, resourcet, safe, semigroups, stm, store
         , streaming-commons, syb, tar, temporary, text, time, transformers
         , unix-compat, unordered-containers, utf8-string, vector
         , xml-conduit, xml-types, yaml, zlib
         }:
         mkDerivation {
           pname = "stackage-curator";
           version = "0.17.0.0";
           src = fetchgit {
             url = "https://github.com/fpco/stackage-curator.git";
             sha256 = "001zmm8q01nin2kgdrx174pm6fkybvkhhnvvl9fkv71a6l2hcviw";
             rev = "c25cf6959a1d1b3129b18855ddbc7974324cc422";
           };
           isLibrary = true;
           isExecutable = true;
           libraryHaskellDepends = [
             aeson amazonka amazonka-core amazonka-s3 async base blaze-html
             bytestring Cabal classy-prelude-conduit conduit conduit-extra
             containers cryptonite cryptonite-conduit data-default-class
             directory exceptions filepath hashable html-conduit http-client
             http-client-tls http-conduit lucid memory mime-types
             mono-traversable mtl old-locale process resourcet safe semigroups
             stm store streaming-commons syb tar temporary text time
             transformers unix-compat unordered-containers utf8-string vector
             xml-conduit xml-types yaml zlib
           ];
           executableHaskellDepends = [
             aeson amazonka amazonka-core amazonka-s3 async base blaze-html
             bytestring Cabal classy-prelude-conduit conduit conduit-extra
             containers cryptonite cryptonite-conduit data-default-class
             directory exceptions filepath hashable html-conduit http-client
             http-client-tls http-conduit lucid memory mime-types
             mono-traversable mtl old-locale optparse-applicative
             optparse-simple process resourcet safe semigroups stm store
             streaming-commons syb tar temporary text time transformers
             unix-compat unordered-containers utf8-string vector xml-conduit
             xml-types yaml zlib
           ];
           buildTools = [ hpack ];
           preConfigure = "hpack";
           doHaddock = false;
           doCheck = false;
           homepage = "https://github.com/fpco/stackage-curator#readme";
           description = "Tools for curating Stackage bundles";
           license = stdenv.lib.licenses.mit;
         }) {};
      "cabal2nix" = callPackage
        ({ mkDerivation, aeson, ansi-wl-pprint, base, bytestring, Cabal
        , containers, deepseq, directory, distribution-nixpkgs, fetchgit, filepath
        , hackage-db, hopenssl, hpack, language-nix, lens, monad-par
        , monad-par-extras, mtl, optparse-applicative, pretty, process
        , split, tasty, tasty-golden, text, time, transformers, yaml
        }:
        mkDerivation {
          pname = "cabal2nix";
          version = "2.14.4";
          src = fetchgit {
            url = "https://github.com/typeable/cabal2nix.git";
            rev = "d88a8fac1ad5766e73c0426f13eef086be022973";
            sha256 = "0shpskvnrjihmnkp0ykqyh8a232fkpjdann0j8q37dk97dlilsc5";
          };
          isLibrary = true;
          isExecutable = true;
          libraryHaskellDepends = [
            aeson ansi-wl-pprint base bytestring Cabal containers deepseq
            directory distribution-nixpkgs filepath hackage-db hopenssl hpack
            language-nix lens optparse-applicative pretty process split text
            time transformers yaml
          ];
          executableHaskellDepends = [
            aeson base bytestring Cabal containers directory
            distribution-nixpkgs filepath hopenssl language-nix lens monad-par
            monad-par-extras mtl optparse-applicative pretty
          ];
          testHaskellDepends = [
            base Cabal containers directory filepath language-nix lens pretty
            process tasty tasty-golden
          ];
          doCheck = false;
          preCheck = ''
            export PATH="$PWD/dist/build/cabal2nix:$PATH"
            export HOME="$TMPDIR/home"
          '';
          homepage = "https://github.com/nixos/cabal2nix#readme";
          description = "Convert Cabal files into Nix build instructions";
          license = stdenv.lib.licenses.bsd3;
        }) {};
      "distribution-nixpkgs" = callPackage
        ({ mkDerivation, aeson, base, bytestring, Cabal, containers
        , deepseq, hspec, language-nix, lens, pretty, process, split
        }:
        mkDerivation {
          pname = "distribution-nixpkgs";
          version = "1.3.1";
          sha256 = "1113qizh931inpim0ajfwihcvlp26n1l4bf36v0jakd34k70mm8g";
          libraryHaskellDepends = [
            aeson base bytestring Cabal containers deepseq language-nix lens
            pretty process split
          ];
          testHaskellDepends = [ base deepseq hspec lens ];
          homepage = "https://github.com/peti/distribution-nixpkgs#readme";
          description = "Types and functions to manipulate the Nixpkgs distribution";
          license = stdenv.lib.licenses.bsd3;
        }) {};
      "gitlib" = callPackage
        ({ mkDerivation, base, base16-bytestring, bytestring, conduit
         , conduit-combinators, containers, directory, exceptions, fetchgit
         , filepath, hashable, mtl, resourcet, semigroups, tagged, text
         , time, transformers, unix, unliftio, unliftio-core
         , unordered-containers
         }:
         mkDerivation {
           pname = "gitlib";
           version = "3.1.2";
           src = fetchgit {
             url = "https://github.com/jwiegley/gitlib.git";
             sha256 = "1fjn9r1hdcmj7d9g1cg8f8snls3mq04673bxcckilys4v2g9sfl8";
             rev = "6ebdab95c116ef946d1aaa1d4a69da6ac07415af";
           };
           postUnpack = "sourceRoot+=/gitlib; echo source root reset to $sourceRoot";
           libraryHaskellDepends = [
             base base16-bytestring bytestring conduit conduit-combinators
             containers directory exceptions filepath hashable mtl resourcet
             semigroups tagged text time transformers unix unliftio
             unliftio-core unordered-containers
           ];
           doHaddock = false;
           doCheck = false;
           homepage = "https://github.com/jwiegley/gitlib";
           description = "API library for working with Git repositories";
           license = stdenv.lib.licenses.mit;
         }) {};
      "gitlib-libgit2" = callPackage
        ({ mkDerivation, base, bytestring, conduit, conduit-combinators
         , containers, directory, exceptions, fast-logger, fetchgit
         , filepath, gitlib, hlibgit2, mmorph, monad-loops, mtl, resourcet
         , stm, stm-conduit, tagged, template-haskell, text, text-icu, time
         , transformers, transformers-base, unliftio, unliftio-core
         }:
         mkDerivation {
           pname = "gitlib-libgit2";
           version = "3.1.2";
           src = fetchgit {
             url = "https://github.com/jwiegley/gitlib.git";
             sha256 = "1fjn9r1hdcmj7d9g1cg8f8snls3mq04673bxcckilys4v2g9sfl8";
             rev = "6ebdab95c116ef946d1aaa1d4a69da6ac07415af";
           };
           postUnpack = "sourceRoot+=/gitlib-libgit2; echo source root reset to $sourceRoot";
           libraryHaskellDepends = [
             base bytestring conduit conduit-combinators containers directory
             exceptions fast-logger filepath gitlib hlibgit2 mmorph monad-loops
             mtl resourcet stm stm-conduit tagged template-haskell text text-icu
             time transformers transformers-base unliftio unliftio-core
           ];
           doHaddock = false;
           doCheck = false;
           description = "Libgit2 backend for gitlib";
           license = stdenv.lib.licenses.mit;
         }) {};
         "hlibgit2" = callPackage
           ({ mkDerivation, base, bindings-DSL, git, openssl, process, zlib }:
              mkDerivation {
              pname = "hlibgit2";
              version = "0.18.0.16";
              sha256 = "0plfzxzgph7iilwp434ndcw7pia47n96hcfa32fs7q5gz8kl17hr";
              libraryHaskellDepends = [ base bindings-DSL zlib ];
              librarySystemDepends = [ openssl ];
              postUnpack = ''
                 sed -i 's/-Wno-format//' $sourceRoot/hlibgit2.cabal
              '';
              testHaskellDepends = [ base process ];
              testToolDepends = [ git ];
              description = "Low-level bindings to libgit2";
              license = stdenv.lib.licenses.mit;
              }) {inherit (pkgs) git; inherit (pkgs) openssl;};
    };
in nixpkgs.haskell.packages.stackage.lts-1321.override {
  packageSetConfig = self: super: stackPackages { inherit (nixpkgs) pkgs stdenv; inherit (self) callPackage; } super;
}
